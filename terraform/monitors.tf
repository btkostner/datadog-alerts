locals {
  monitor_data = {
    for mon in flatten([for p in fileset(path.module, "../monitors/**/*.yml") : yamldecode(file(p))])
    #     Terraform resource name - if type, service, and environment are unique, name can be autogenerated.
    : "${try(mon.name, mon.type)} ${mon.service} ${mon.environment}" => mon
  }
}

module "monitor" {
  for_each = local.monitor_data
  source   = "./modules/monitor"

  name              = lookup(each.value, "name", null)
  message           = lookup(each.value, "message", null)
  environment       = each.value.environment
  service           = each.value.service
  alert_channels    = lookup(each.value, "alert_channels", [])
  type              = each.value.type
  method            = each.value.method
  path              = each.value.path
  priority          = lookup(each.value, "priority", null)
  percentile        = lookup(each.value, "percentile", null)
  critical          = each.value.critical
  warning           = each.value.warning
  alert_on_recovery = lookup(each.value, "alert_on_recovery", true)
  renotify_interval = lookup(each.value, "renotify_interval", null)
}
